{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to the Utility Bank script documentation.</p>"},{"location":"#compatibilities","title":"Compatibilities","text":"<p>Maps: Blaine County Branch (MXC) Target: ox_target, qb-target (one of them is needed, not both) Sound: xsound (optional, if started audios will be played) </p>"},{"location":"#discord","title":"Discord","text":""},{"location":"events/bomb_planted/","title":"Utility:BankRobbery:BombPlanted","text":"<p>Called when a bomb is planted on a prevault door,, called exactly after the item removal. (Called for server and all clients)</p> Parameter Data Type Description <code>source</code> number The source of the hacker <code>bankId</code> number The index in the Config.Banks table <code>item</code> string The bomb item, currently its just Config.BombItem Example <pre><code>RegisterNetEvent(\"Utility:BankRobbery:BombPlanted\", function(source, bankId, item)\n    print(\"Bomb planted by\", source, \"in bank\", bankId)\nend)\n</code></pre>"},{"location":"events/entered_bank/","title":"Utility:BankRobbery:EnteredBank","text":"<p>Called when a player enters a bank (Called for server and the caller client)</p> Parameter Data Type Description <code>bankId</code> number The index in the Config.Banks table Example <pre><code>RegisterNetEvent(\"Utility:BankRobbery:EnteredBank\", function(bankId)\n    print(\"Entered bank\", bankId)\nend)\n</code></pre>"},{"location":"events/exited_bank/","title":"Utility:BankRobbery:ExitedBank","text":"<p>Called when a player exits a bank (Called for server and the caller client)</p> Parameter Data Type Description <code>bankId</code> number The index in the Config.Banks table Example <pre><code>RegisterNetEvent(\"Utility:BankRobbery:ExitedBank\", function(bankId)\n    print(\"Exited bank\", bankId)\nend)\n</code></pre>"},{"location":"events/vault_hacked/","title":"Utility:BankRobbery:VaultHacked","text":"<p>Called when a bank vault is hacked. (Called for server and all clients)</p> Parameter Data Type Description <code>source</code> number The source of the hacker <code>bankId</code> number The index in the Config.Banks table Example <pre><code>RegisterNetEvent(\"Utility:BankRobbery:VaultHacked\", function(source, bankId)\n    print(\"Vault hacked by\", source, \"in bank\", bankId)\nend)\n</code></pre>"},{"location":"exports/GetAllDoorsStatus/","title":"GetAllDoorsStatus","text":"<p>Return the status of all the doors of a bank.</p> Argument Data Type Nedeed Default Description <code>bankId</code> number <code>-</code> The index in the Config.Banks table Returns Data Type Description table The status of all the doors in a key value pair. Example <pre><code>local doors = exports[\"utility_bank\"]:GetAllDoorsStatus(1)\n\nfor door_id, status in pairs(doors) do\n    print(\"The status of the door\", door_id, \"is\", status)\nend\n</code></pre>"},{"location":"exports/GetAllDoorsStatus_C/","title":"GetAllDoorsStatus","text":"<p>Return the status of all the doors of a bank.</p> Argument Data Type Nedeed Default Description <code>bankId</code> number <code>-</code> The index in the Config.Banks table Returns Data Type Description table The status of all the doors in a key value pair. Example <pre><code>local doors = exports[\"utility_bank\"]:GetAllDoorsStatus(1)\n\nfor door_id, status in pairs(doors) do\n    print(\"The status of the door\", door_id, \"is\", status)\nend\n</code></pre>"},{"location":"exports/GetCurrentBank/","title":"GetCurrentBank","text":"<p>Get the id of the current bank. (Works only if the player is inside a bank)</p> Returns Data Type Description number The id of the current bank Example <pre><code>local id = exports[\"utility_bank\"]:GetCurrentBank()\n\nprint(\"The player is inside the bank: \"..id)\n</code></pre>"},{"location":"exports/GetDoorObject/","title":"GetDoorObject","text":"<p>Get the object (entity) of a door or 0 if not found.</p> Argument Data Type Nedeed Default Description <code>bankId</code> number <code>-</code> The index in the Config.Banks table <code>doorId</code> string <code>-</code> Internal id to refer the door, generally can be one of the following values: vault, prevault, shutters Returns Data Type Description number The object (entity) of the door Example <pre><code>local obj = exports[\"utility_bank\"]:GetDoorObject(1, \"shutters\")\n\nprint(GetEntityCoords(obj))\n</code></pre>"},{"location":"exports/IsCurrentBankDoorOpen/","title":"IsCurrentBankDoorOpen","text":"<p>Check if the current bank door is open. (Works only if the player is inside a bank)</p> Argument Data Type Nedeed Default Description <code>doorId</code> string <code>-</code> Internal id to refer the door, generally can be one of the following values: vault, prevault, shutters Returns Data Type Description boolean true if the door is open, false otherwise Example <pre><code>if exports[\"utility_bank\"]:IsInsideBank() then\n    local open = exports[\"utility_bank\"]:IsCurrentBankDoorOpen(\"vault\")\n\n    print(\"The vault door is: \"..(open and \"open\" or \"closed\"))\nend\n</code></pre>"},{"location":"exports/IsInsideBank/","title":"IsInsideBank","text":"<p>Check if the player is inside a bank.</p> Returns Data Type Description boolean true if the player is inside a bank, false otherwise Example <pre><code>if exports[\"utility_bank\"]:IsInsideBank() then\n    local open = exports[\"utility_bank\"]:IsCurrentBankDoorOpen(\"vault\")\n\n    print(\"The vault door is: \"..(open and \"open\" or \"closed\"))\nend\n</code></pre>"},{"location":"exports/SetBankDoorStatus/","title":"SetBankDoorStatus","text":"<p>Sets the status of a bank door.</p> Argument Data Type Nedeed Default Description <code>bankId</code> number <code>-</code> The index in the Config.Banks table <code>doorId</code> string <code>-</code> Internal id to refer the door, generally can be one of the following values: vault, prevault, shutters <code>status</code> boolean <code>-</code> True to open the door, false to close it (for shutters its inverted, so true = closed) Example <pre><code>exports[\"utility_bank\"]:SetBankDoorStatus(1, \"shutters\", true)\n</code></pre>"}]}